// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResultCard should match the snapshot with all data passed in correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ResultCard
    onClick={[MockFunction]}
    value={
      Object {
        "isFavorite": true,
        "name": "Chewy",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        "Chewy",
        <button
          className="btn"
          onClick={[MockFunction]}
        >
          favorite
        </button>,
      ],
      "className": "card card--favorite-true",
    },
    "ref": null,
    "rendered": Array [
      "Chewy",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "favorite",
          "className": "btn",
          "onClick": [MockFunction],
        },
        "ref": null,
        "rendered": "favorite",
        "type": "button",
      },
    ],
    "type": "article",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "Chewy",
          <button
            className="btn"
            onClick={[MockFunction]}
          >
            favorite
          </button>,
        ],
        "className": "card card--favorite-true",
      },
      "ref": null,
      "rendered": Array [
        "Chewy",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "favorite",
            "className": "btn",
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": "favorite",
          "type": "button",
        },
      ],
      "type": "article",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
